{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALY","SORT_BY_LENGTH","App","useState","field","reverse","sortConfig","setSortConfig","buttonConfig","type","className","text","map","onClick","prev","list","preparedList","sort","good1","good2","localeCompare","length","getPreparedList","good","ReactDOM","render","document","getElementById"],"mappings":"wOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAqB,gBACrBC,EAAiB,SAEVC,EAAM,WACjB,MAAoCC,mBAAS,CAAEC,MAAO,GAAIC,SAAS,IAAnE,mBAAOC,EAAP,KAAmBC,EAAnB,KAuBMC,EAAe,CACnB,CACEC,KAAMT,EACNU,UAAW,UACXC,KAAM,uBAER,CACEF,KAAMR,EACNS,UAAW,aACXC,KAAM,kBAER,CACEF,KAAM,UACNC,UAAW,aACXC,KAAM,YAIV,OACE,sBAAKD,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACGF,EAAaI,KAAI,gBAAGH,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,KAApB,OAChB,wBAEEF,KAAK,SACLC,UAAS,iBAAYA,EAAZ,YACPD,IAASH,EAAWF,OAAkB,YAATK,EAAqB,WAAa,IAEjEI,QAAS,WAELN,EADW,YAATE,EACY,SAAAK,GAAI,kCAAUA,GAAV,IAAgBT,SAAUS,EAAKT,WAEnC,CAAED,MAAOK,EAAMJ,SAAS,KAV5C,SAcGM,GAbIF,OAiBPH,EAAWF,OAASE,EAAWD,UAC/B,wBACEI,KAAK,SACLC,UAAU,4BACVG,QAAS,WACPN,EAAc,CAAEH,MAAO,GAAIC,SAAS,KAJxC,sBAYJ,6BA1EoB,SAACU,EAAD,GAA+B,IAAtBX,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACtC,IAAKD,IAAUC,EACb,OAAOU,EAGT,IAAMC,EAAeZ,EACjB,YAAIW,GAAME,MAAK,SAACC,EAAOC,GACvB,OAAQf,GACN,QACE,OAAO,EACT,KAAKJ,EACH,OAAOkB,EAAME,cAAcD,GAC7B,KAAKlB,EACH,OAAOiB,EAAMG,OAASF,EAAME,WAGhCN,EAEJ,OAAOV,EAAUW,EAAaX,UAAYW,EAyDrCM,CAAgBvB,EAAiBO,GAAYM,KAAI,SAAAW,GAAI,OACpD,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YChGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.411cef3f.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALY = 'alphabeticaly';\nconst SORT_BY_LENGTH = 'length';\n\nexport const App = () => {\n  const [sortConfig, setSortConfig] = useState({ field: '', reverse: false });\n\n  const getPreparedList = (list, { field, reverse }) => {\n    if (!field && !reverse) {\n      return list;\n    }\n\n    const preparedList = field\n      ? [...list].sort((good1, good2) => {\n        switch (field) {\n          default:\n            return 0;\n          case SORT_ALPHABETICALY:\n            return good1.localeCompare(good2);\n          case SORT_BY_LENGTH:\n            return good1.length - good2.length;\n        }\n      })\n      : list;\n\n    return reverse ? preparedList.reverse() : preparedList;\n  };\n\n  const buttonConfig = [\n    {\n      type: SORT_ALPHABETICALY,\n      className: 'is-info',\n      text: 'Sort alphabetically',\n    },\n    {\n      type: SORT_BY_LENGTH,\n      className: 'is-success',\n      text: 'Sort by length',\n    },\n    {\n      type: 'reverse',\n      className: 'is-warning',\n      text: 'Reverse',\n    },\n  ];\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        {buttonConfig.map(({ type, className, text }) => (\n          <button\n            key={type}\n            type=\"button\"\n            className={`button ${className} ${\n              type !== sortConfig.field && type !== 'reverse' ? 'is-light' : ''\n            }`}\n            onClick={() => {\n              if (type === 'reverse') {\n                setSortConfig(prev => ({ ...prev, reverse: !prev.reverse }));\n              } else {\n                setSortConfig({ field: type, reverse: false });\n              }\n            }}\n          >\n            {text}\n          </button>\n        ))}\n\n        {(sortConfig.field || sortConfig.reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortConfig({ field: '', reverse: false });\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {getPreparedList(goodsFromServer, sortConfig).map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}